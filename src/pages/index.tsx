// import Head from "next/head";
// import Image from "next/image";
// import localFont from "next/font/local";
// import styles from "@/styles/Home.module.css";
// import { Button } from "@mui/material";
// // import { Button } from '@mui/material';
// import { useTranslation } from 'react-i18next';
// import i18n from "@/lib/i18n";
// import { useEffect, useState } from "react";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export default function Home() {
//   // const { t } = useTranslation();
//   // console.log(i18n.language, "CONSOLE>LOG")
//   // const toggleLanguage = () => {

//   //   const newLang = i18n.language === 'en' ? 'ar' : 'en';
//   //   i18n.changeLanguage(newLang);
//   // };

//   const { t } = useTranslation();
//   const [language, setLanguage] = useState(i18n.language); // Local state to track language

//   const toggleLanguage = () => {
//     const newLang = i18n.language === "en" ? "ar" : "en";
//     i18n.changeLanguage(newLang);
//     setLanguage(newLang); // Update the language state
//   };

//   useEffect(() => {
//     setLanguage(i18n.language); // Update language state when i18n language changes
//   }, [i18n.language]); // Re-run effect when i18n language changes


//   return (
//     <>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <header>

//         <h1>{t("welcome")}</h1> {/* Translated content */}
//         <p>{t("hello")}</p> {/* Translated content */}    
//         <h1>{t('welcome')}</h1>
//         <p>{t('hello')}</p> {/* You can use `t('hello')` to translate */}
//         <Button onClick={toggleLanguage}>
//           {i18n.language === 'en' ? 'Switch to Arabic' : 'Switch to English'}
//         </Button>
//       </header>
//     </>
//   );
// }
import React, { useEffect, useState } from "react";
import Head from "next/head";
import { Box, } from "@mui/material";
import { useTranslation } from "react-i18next";
// import i18n from "@/lib/i18n";
import "./../styles/Home.module.css"
import { Heading, MainContainer, SubHeading } from "@/styles/style";
import CustomButton from "@/components/button";
import { LoginOutlined, PersonAddOutlined } from "@mui/icons-material";
import { useRouter } from "next/navigation";
import i18n from "@/lib/i18n";
export default function Home() {
  const router = useRouter()
  const { t } = useTranslation();
  const [language, setLanguage] = useState(i18n.language); // Track the language in state

  // const toggleLanguage = () => {
  //   const newLang = i18n.language === "en" ? "ar" : "en";
  //   i18n.changeLanguage(newLang); // Change language via i18n
  //   setLanguage(newLang); // Update state to trigger re-render
  // };

  // Ensure the language state is in sync with i18n.language
  useEffect(() => {
    setLanguage(i18n.language);
  }, [i18n.language]);

  return (
    <>
      <Head>
        <title>Cultural UI</title>
        <meta name="description" content="Cultural UI" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <p style={{ color: "#F0F0F0" }}>{language}</p>
        <MainContainer >
          <img src="/logo.svg" width="300px" />
          {/* <ImageContainer> */}
          <Heading>{t("welcometoculturalhouse")}</Heading>
          <Box>
            <CustomButton onClick={() => router.push("/login")} sx={{ fontSize: "1.8rem", padding: "0.6rem 3rem" }} label={`${t('login')}`} fullWidth={true}
              startIcon={<LoginOutlined sx={{
                minWidth: "2rem",
                minHeight: "2rem",
                marginLeft: "1.2rem",
                fontWeight: 400
              }} />} />
          </Box>
          <SubHeading>{t("or")}</SubHeading>
          <Box>
            <CustomButton sx={{ fontSize: "1.8rem", padding: "0.6rem 3rem" }} label={`${t('register')}`} fullWidth={true}
              startIcon={<PersonAddOutlined sx={{
                minWidth: "2rem",
                minHeight: "2rem",
                marginLeft: "1.2rem",
                fontWeight: 400
              }} />} />
          </Box>
          {/* </ImageContainer> */}
        </MainContainer>
      </div>
    </>
  );
}
